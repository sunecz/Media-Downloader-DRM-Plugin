{
	plugin: {
		drm: {
			title: "DRM Plugin",
			configuration: {
				group: {
					general: "DRM"
				},
				fields: {
					debug:   "Debug mode",
					quality: "Quality",
					record: {
						useDisplayRefreshRate: "Use display refresh rate, if known",
						defaultFrameRate:      "Default recording FPS"
					},
					output: {
						useMediaFrameRate: "Use FPS of media source, if available",
						defaultFrameRate:  "Default output FPS"
					},
					process: {
						keepRecordFile: "Keep the recorded file"
					}
				},
				values: {
					quality: {
						LOSSLESS: "Lossless",
						HIGH:     "High",
						MEDIUM:   "Medium",
						LOW:      "Low"
					}
				}
			},
			drm_instance: {
				begin: "Starting DRM instance...",
				end:   "DRM instance ended",
				error: "An error occurred in DRM instance"
			},
			widevine: {
				begin:            "Starting Download Widevine CDM process...",
				wait_cef_request: "Waiting for Widevine CDM download request made by CEF (up to 10 seconds)...",
				end:              "Download Widevine CDM process done",
				error:            "Download Widevine CDM process has thrown an error",
				begin_request:    "Sending Widevine CDM download request...",
				end_request:      "Sending Widevine CDM download request... done",
				begin_download:   "Downloading Widevine CDM .crx file...",
				update_download:  "Downloading Widevine CDM .crx file... %{percent}%%",
				end_download:     "Downloading Widevine CDM .crx file... done",
				begin_extract:    "Extracting downloaded Widevine CDM .crx file...",
				end_extract:      "Extracting downloaded Widevine CDM .crx file... done"
			},
			phase: {
				analyze: {
					begin: "Starting analyzing...",
					end:   "Analyzing ended",
					error: "An error occurred while analyzing"
				},
				record: {
					begin: "Starting recording...",
					end:   "Recording ended",
					error: "An error occurred while recording"
				},
				post_process: {
					begin: "Starting post-processing...",
					end:   "Post-processing ended",
					error: "An error occurred while post-processing",
					enum: {
						MEAN_VOLUME:    "Getting volume mean",
						VOLUME_ENTRIES: "Getting volume entries",
						SILENCE_RANGES: "Getting silence ranges",
						CUTS_GENERATE:  "Generating cuts",
						FIX_VIDEO:      "Fixing video",
						TRIM_VIDEO:     "Trimming video",
						FIX_AUDIO:      "Fixing audio",
						TRIM_AUDIO:     "Trimming audio",
						MERGE:          "Merging video and audio"
					}
				}
			},
			states: {
				instance:     "DRM process",
				widevine:     "Widevine",
				analyze:      "Analysis",
				record:       "Recording",
				post_process: "Post process"
			}
		}
	}
}